% --------------------- %
% ---- ENAE484 TEAM --- %
%  Workspace generator  %
% --------------------- %
% --------------------- %

% RECALL THAT DH TABLES START i=0 IS THE BASE LINK, i.e [0,0,0]
% units are degrees and meters

% Make a DH table for refernce
% __|      a(i-1),            alpha(i-1),       d(i),         theta(i)
% 1 |       a0,                 alpha0,         d1,           theta1 
% 2 |       a1,                 alpha1,         d2,           theta2;  
%   |       .                     .             .               .   
%   |       .                     .             .               .   
%   |       .                     .             .               .  
% j |       aj-1,               alphaj-1,       dj,           thetaj;  



% NBV stuff:
% NBV DH table (for reference)
% __|      a(i-1),            alpha(i-1),       d(i),         theta(i)
% 1 |       0.0,                0.0,            0.2872,        0.0; 
% 2 |       0.0,                1.5708,         0.0,           0.0;  
% 3 |       0.5589,            -3.1415,         0.0,           0.0;    
% 4 |       0.1514,             1.5708,         0.5388,        0.0;  
% 5 |       0.0,               -1.5708,         0.0,           0.0;
% 6 |       0.0,                1.5708,         0.0,           0.0;  
% T |       0.2666               0.0            0.0            0.0;

nbvDH = [
  0.0,        0.0,            0.2872,        0.0; 
  0.0,        1.5708,         0.0,           0.0;  
  0.5589,    -3.1415,         0.0,           0.0;    
  0.1514,     1.5708,         0.5388,        0.0;  
  0.0,       -1.5708,         0.0,           0.0;
  0.0,        1.5708,         0.0,           0.0];

% nbvDH = [
%      0.2872           0             0           0;
%        0              0             0           90;
%        0              0           0.5589       -180;
%      0.5388           0           0.1514        90;
%        0              0             0          -90;
%        0              0             0           90;
%      0.2666           0             0           0];

nbvLimits = [-180    180;
             (0-30)    180+30;
             -90 180;
             -180    180;
              -90-30     90+30;
             -180    180];

count = 1;
% Begin the long ass iteration (its so over)
for th1=nbvLimits(1,1):0.001:nbvLimits(1,2)
    th2 = pi;
    th3 = pi/2;
    th4 = 0;
    th5 = 0;
    th6 = 0;
    % Get the DH transformation matricies
    T1 = RotMat(nbvDH(1,2), "x", "deg")*TransMat(nbvDH(1,1), "a")*RotMat(th1, "z", "deg")*TransMat(nbvDH(1,), "d");
    T2 = RotMat(nbvDH(2,2), "x", "deg")*TransMat(nbvDH(2,1), "a")*RotMat(th2, "z", "deg")*TransMat(nbvDH(2,1), "d");
    T3 = RotMat(nbvDH(3,2), "x", "deg")*TransMat(nbvDH(3,1), "a")*RotMat(th3, "z", "deg")*TransMat(nbvDH(3,1), "d");
    T4 = RotMat(nbvDH(4,2), "x", "deg")*TransMat(nbvDH(4,1), "a")*RotMat(th4, "z", "deg")*TransMat(nbvDH(4,1), "d");
    T5 = RotMat(nbvDH(5,2), "x", "deg")*TransMat(nbvDH(5,1), "a")*RotMat(th5, "z", "deg")*TransMat(nbvDH(5,1), "d");
    T6 = RotMat(nbvDH(6,4), "x", "deg")*TransMat(nbvDH(6,3), "a")*RotMat(th6, "z", "deg")*TransMat(nbvDH(6,1), "d");
    Tool = RotMat(nbvDH(7,4), "x", "deg")*TransMat(nbvDH(7,3), "a")*RotMat(nbvDH(7,2), "z", "deg")*TransMat(nbvDH(7,1), "d");
    T_final = T1*T2*T3*T4*T5*T6*Tool; % get the final transformation matrix
    yaw_plane_cartx(count) = T_final(1,4); % Save the value in the x vector
    yaw_plane_carty(count) = T_final(2,4); % Save the value in the y vector
    yaw_plane_cartz(count) = T_final(3,4); % Save the value in the z vector
    count = count+1; % iterate up
end

% % Now save the vector outputs
% file_name = robot_name + "_workspace_data.mat";
% nbvx = cartx;
% nbvy = carty;
% nbvz = cartz;
% nbv_cart_coords(:,1) = nbvx;
% nbv_cart_coords(:,2) = nbvy;
% nbv_cart_coords(:,3) = nbvz;
% save(file_name, "nbvx", "nbvy", "nbvz");