% --------------------- %
% ---- ENAE484 TEAM --- %
%  Workspace generator  %
% --------------------- %
% --------------------- %
clear

% RECALL THAT DH TABLES START i=0 IS THE BASE LINK, i.e [0,0,0]
% units are degrees and meters

% Make a DH table for refernce
% __|      a(i-1),            alpha(i-1),       d(i),         theta(i)
% 1 |       a0,                 alpha0,         d1,           theta1 
% 2 |       a1,                 alpha1,         d2,           theta2;  
%   |       .                     .             .               .   
%   |       .                     .             .               .   
%   |       .                     .             .               .  
% j |       aj-1,               alphaj-1,       dj,           thetaj;  



% NBV stuff:
% SAWYER DH table (for reference)
% __|       a(i-1)      alpha(i-1)      d(i)        theta(i)

% 1 |       0.081       -90             0.1925          th2
% 2 |       0           -90             0.1925          th2
% 3 |       0           -90             0.4             th3
% 4 |       0           -90             -0.1685         th4
% 5 |       0           -90             0.4             th5
% 6 |       0           -90             0.1363          th6
% 7 |       0           -90             0.11            th7
% T |       0           0           0               thT



sawyer_DH = [ 
     0.237	         0           0.081         -90
     0.1925          0           0             -90
     0.4             0           0             -90
    -0.1685          0           0             -90
     0.4             0           0             -90
     0.1363          0           0             -90
     0.11            0           0             -90
     0               0           0              0];

nbvDH = [
  0.0,        0.0,            0.2872,        0.0; 
  0.0,        pi/2,         0.0,           0.0;  
  0.5589,    -pi,         0.0,           0.0;    
  0.1514,     pi/2,         0.5388,        0.0;  
  0.0,       -pi/2,         0.0,           0.0;
  0.0,        pi/2,         0.0,           0.0;
  0.0,        0.0,         0.2666,        0.0];


% nbvLimits = [-pi    pi;
%              (0-25)    180+25;
%              -90 90;
%              -180    180;
%               -90-30     90+30;
%              -180    180];

% Begin the long ass iteration (its so over)

nbvDH_mod = nbvDH;
nbvDH_mod(2, 4) = pi;
nbvDH_mod(3, 4) = pi/2;

count = 1;
% Get shoulder YAW reachable workspace
for theta=-pi:0.001:pi

    % Get the DH transformation matricies

    nbvDH_mod(1, 4) = theta;
    T_final = SslDhTableToTransf(0, 7, nbvDH_mod);
    
    nbv_reach.yaw.cartx(count) = T_final(1,4); % Save the value in the x vector
    nbv_reach.yaw.carty(count) = T_final(2,4); % Save the value in the y vector
    nbv_reach.yaw.cartz(count) = T_final(3,4); % Save the value in the z vector
    count = count+1; % iterate up
end


% reset DH table
nbvDH_mod = nbvDH;
nbvDH_mod(3, 4) = pi/2;

count = 1;
for theta=(-deg2rad(25)):0.001:(pi+deg2rad(25))

    % Get the DH transformation matricies
    nbvDH_mod(2, 4) = theta;
    T_final = SslDhTableToTransf(0, 7, nbvDH_mod);
    
    nbv_reach.pitch.cartx(count) = T_final(1,4); % Save the value in the x vector
    nbv_reach.pitch.carty(count) = T_final(2,4); % Save the value in the y vector
    nbv_reach.pitch.cartz(count) = T_final(3,4); % Save the value in the z vector
    count = count+1; % iterate up
end


% reset DH table
nbvDH_mod = nbvDH;
nbvDH_mod(2, 4) = pi+deg2rad(25);

count = 1;
for theta=(-pi/2):0.001:pi/2

    % Get the DH transformation matricies
    nbvDH_mod(3, 4) = theta;
    T_final = SslDhTableToTransf(0, 7, nbvDH_mod);
    
    nbv_reach.elbow.cartx(count) = T_final(1,4); % Save the value in the x vector
    nbv_reach.elbow.carty(count) = T_final(2,4); % Save the value in the y vector
    nbv_reach.elbow.cartz(count) = T_final(3,4); % Save the value in the z vector
    count = count+1; % iterate up
end




% Now save the vector outputs
% file_name = "nbv_yaw_workspace.mat";
% x = cartx;
% y = carty;
% z = cartz;
% save(file_name, "x", "y", "z");